import {
  fork,
  take,
  call,
  put,
  cancel,
  race,
  takeEvery,
  takeLatest,
  all
} from 'redux-saga/effects';

import {
  testingSaga,
  addNewWallet,
  fillNewWallet,
  connectToRippleApi
} from '../actions/index';
import { createSevensObj, sologenic } from '../utils/utils2.js';
import { create } from 'apisauce';

const api = create({
  baseURL: 'https://api.coinfield.com/v1/',
  headers: {
    post: {
      'Content-Type': 'application/x-www-form-urlencoded'
    }
  },
  timeout: 10000
});

// TESTING SAGA
function* testingSagaSaga() {
  yield takeLatest(`${testingSaga}`, testingCall);
}

function* testingCall() {
  try {
    console.log('HELLO, SAGA READY!!!!');
  } catch (e) {
    console.log('EEEE');
  }
}

// CONNECT TO RIPPLE API
function* connectToRippleApiSaga() {
  yield takeLatest(`${connectToRippleApi}`, connectToRippleApiCall);
}

function* connectToRippleApiCall() {
  try {
    yield sologenic.connect();

    yield sologenic.on('queued', (id, tx) => {
      console.log('TX QUEUED: ', id);
    });
    yield sologenic.on('dispatched', (id, tx) => {
      console.log('TX DISPATCHED:', id);
    });
    yield sologenic.on('requeued', (id, tx) => {
      console.log('TX REQUEUED:', id);
    });
    yield sologenic.on('warning', (id, type, tx) => {
      console.log('TX WARNING:', id, type, tx);
    });
    yield sologenic.on('validated', (id, tx) => {
      console.log('TX VALIDATED:', id);
    });
    yield sologenic.on('failed', (id, type, tx) => {
      console.log('TX FAILED:', id, type, tx);
    });
    console.log('start');
  } catch (error) {
    // yield put(connectToRippleApiError());
    console.log('REQUEST_CONNECT_RIPPLE_API_ERROR', error);
  }
}

// ADD NEW WALLET
// function* addNewWalletSaga() {
//   yield takeLatest(`${addNewWalletTrustline}`, getTrustlineCall);
// }

// function getTrustline(address, issuer) {
//   const rippleApi = sologenic.getRippleApi();
//   return rippleApi.getTrustlines(address, {
//     counterparty: issuer
//   });
// }

// const issuer = 'rEFgkRo5BTxXJiLVYMdEnQQ9J9Kj1F3Yvi'; //this is a test issuer for solo which is generated by sologenic-issuarance

// function* getTrustlineCall(data) {
//   try {
//     console.log('SAGA WALLETS', data);
//     const response = yield call(
//       getTrustline,
//       data.payload.rippleClassicAddress,
//       issuer
//     );
//     const trustline = response.length > 0 ? true : false;

//     console.log('SAGA RESPONSE', response);
//     console.log('SAGA RESPONSE 2', trustline);

//     yield put(fillNewWallet(data));
//   } catch (e) {
//     console.log('Trustline Error', e);
//   }
// }

export default function* rootSaga() {
  yield all([
    fork(testingSagaSaga),
    // fork(addNewWalletSaga),
    fork(connectToRippleApiSaga)
  ]);
}
